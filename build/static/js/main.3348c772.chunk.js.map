{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","components/Cards/Cards.module.css","components/Navbar.js","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Loader.js","components/Cards/Cards.jsx","App.js","components/About.js","Routes.js","index.js"],"names":["module","exports","Navbar","state","activeItem","handleItemClick","e","name","setState","this","Segment","inverted","style","background","Menu","secondary","Item","fontSize","fontFamily","position","active","onClick","to","Component","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","target","i","key","Loader","Spinner","animation","variant","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","CardMedia","alt","height","image","color","gutterBottom","start","end","duration","separator","Date","toDateString","App","Cards","CountryPicker","React","About","marginLeft","src","width","marginTop","marginRight","marginBottom","Routes","path","exact","excat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3348c772.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2KcXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3vjD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3o9gJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__14yGU\",\"card\":\"Cards_card__3L4KZ\",\"infected\":\"Cards_infected__3HiDu\",\"recovered\":\"Cards_recovered__1yBo7\",\"deaths\":\"Cards_deaths__1l35J\"};","import React, { Component } from 'react'\r\nimport { Menu, Segment } from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Navbar extends Component {\r\n  state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Segment inverted\r\n       style={{\r\n        background: '#4B79A1',  /* fallback for old browsers */\r\n        background: '-webkit-linear-gradient(to right, #283E51, #4B79A1)', /* Chrome 10-25, Safari 5.1-6 */\r\n        background: 'linear-gradient(to right, #283E51, #4B79A1)' /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n        \r\n       }}\r\n      >\r\n        <Menu inverted secondary>\r\n          <Menu.Item style={{fontSize:'20px', fontFamily:'sans-serif'}}>\r\n            Corona Tracker\r\n          </Menu.Item>\r\n\r\n          <Menu.Item\r\n           position=\"right\"\r\n           name='home'\r\n           active={activeItem === 'home'}\r\n           onClick={this.handleItemClick}\r\n          >\r\n            <Link to='/'>Home</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item\r\n           name='about'\r\n           active={activeItem === 'about'}\r\n           onClick={this.handleItemClick}\r\n          >\r\n            <Link to='/about'>About Us</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Segment>\r\n    )\r\n  }\r\n}\r\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['\t#0000FF','#008000','#FF0000'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nexport default function Loader() {\r\n    return (\r\n          <div className=\"container\">\r\n              <Spinner animation=\"border\" variant=\"primary\"  />\r\n          </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid, CardActionArea } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport Loader from '../Loader'\nimport styles from './Cards.module.css';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return (\n      <div className={styles.container}>\n         <Loader/>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography>\n            <CardMedia\n          component=\"img\"\n          alt=\"Covid-19\"\n          height=\"140\"\n          image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRDKcv-660ORS9wuveMMoBE-zV4jWhIx-pS3re_ElUcYUGBtttO&usqp=CAU\"\n      \n        />\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of active cases of COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n          <Typography>\n            <CardMedia\n          component=\"img\"\n          alt=\"Covid-19\"\n          height=\"140\"\n          image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRDKcv-660ORS9wuveMMoBE-zV4jWhIx-pS3re_ElUcYUGBtttO&usqp=CAU\"\n         \n        />\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of recoveries from COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n          <Typography>\n            <CardMedia\n          component=\"img\"\n          alt=\"Covid-19\"\n          height=\"140\"\n          image=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRDKcv-660ORS9wuveMMoBE-zV4jWhIx-pS3re_ElUcYUGBtttO&usqp=CAU\"\n    \n        />\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths caused by COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","import React, { Fragment } from 'react';\nimport Navbar from './components/Navbar'\nimport { Cards, CountryPicker, Chart } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n           <div className={styles.container}>\n            <Cards data={data} />\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\n             <Chart data={data} country={country} /> \n           </div>\n    );\n  }\n}\n\nexport default App;","import React, { Fragment } from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n           \r\n        <Fragment>\r\n            <div className=\"row\">\r\n               <div className=\"col-6\">\r\n                   <h2 className=\"text-center\">What Is Covid-19?</h2>\r\n                   <div style={{marginLeft:\"6px\"}} className=\"jumbotron\">\r\n                   <p style={{fontSize:'16px'}}>\r\n                     Coronaviruses (CoV) are a large family of viruses that cause illness ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS-CoV) and Severe Acute Respiratory Syndrome (SARS-CoV). A novel coronavirus (nCoV) is a new strain that has not been previously identified in humans.\r\n                    </p>\r\n                    <p style={{fontSize:\"16px\"}}>\r\n                     Coronaviruses are zoonotic, meaning they are transmitted between animals and people. Detailed investigations found that SARS-CoV was transmitted from civet cats to humans and MERS-CoV from dromedary camels to humans. Several known coronaviruses are circulating in animals that have not yet infected humans.\r\n                    </p> \r\n                   </div> \r\n                </div>\r\n               <div className=\"col-6\">\r\n                  <h2 className=\"text-center\">How to Prevent?</h2>\r\n                  <img\r\n                   alt=\"Covid-19\"\r\n                   src=\"https://www.lapuste.com/sites/default/files/inline-images/bcpha_poster.png\"\r\n                   style={{display:'block',width:'50%',marginLeft:'auto', marginTop:'auto', marginRight:'auto', marginBottom:'auto'}}\r\n                  />\r\n               </div>\r\n           </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport App from './App'\r\nimport About from './components/About'\r\nimport Navbar from './components/Navbar'\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n        <Navbar/>\r\n          <Switch>\r\n           <Route path='/' exact component={App} />\r\n           <Route path='/about' excat component={About} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Routes from './Routes';\n\nReactDOM.render(<Routes/>, document.getElementById('root'));\n"],"sourceRoot":""}